name: CI for Pull-Request and Merge on master/main

on:
  pull_request:
    branches: [ master, main ]
  push:
    branches: [ master, main ]

env:
  DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_EMAIL: ${{ secrets.DOCKERHUB_EMAIL }}
  DOCKERHUB_PWD: ${{ secrets.DOCKERHUB_PWD }}
  REPO_VERSION: 0.0.0

jobs:
  server-build:
    name: Server build
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
      
      # Cache
      - uses: actions/cache@v2
        with:
          path: /home/runner/work/ubivius-game/ubivius-game/Library
          key: Library-cache
      
      # Test
      - name: Run tests
        uses: webbertakken/unity-test-runner@v1.3
        with:
          projectPath: Assets/Tests

      # Build
      - name: Server build 
        uses: webbertakken/unity-builder@v1.5
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          buildMethod: Build.ServerBuild
          targetPlatform: StandaloneLinux64
          unityVersion: 2019.4.1f1

      - name: Pre-load env-var
        id: fetch-vars
        run: |
            IN=$(echo ${GITHUB_REPOSITORY})
            NAME=${IN#"Ubivius/"}
            echo "::set-output name=REPO_NAME::$(echo $NAME)"
            echo "::set-output name=BRANCH::$(echo $GITHUB_REF)"
        shell: bash

      - name: Build and Push Artefact to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: ubiviushub/${{ steps.fetch-vars.outputs.REPO_NAME }}
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ env.DOCKERHUB_PWD }}
          dockerfile: Dockerfile
          tags: "${{ env.REPO_VERSION }}"

      # Output
      - uses: actions/upload-artifact@v1
        with:
          name: Server
          path: build

  client-build:
    name: Client build
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
      
      # Cache
      - uses: actions/cache@v2
        with:
          path: /home/runner/work/ubivius-game/ubivius-game/Library
          key: Library-cache

      # Test
      - name: Run tests
        uses: webbertakken/unity-test-runner@v1.3
        with:
          projectPath: Assets/Tests

      # Build
      - name: Client build
        uses: webbertakken/unity-builder@v1.5
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          buildMethod: Build.ClientBuild
          targetPlatform: StandaloneWindows64
          unityVersion: 2019.4.1f1

      # Output
      - uses: actions/upload-artifact@v1
        with:
          name: Client
          path: build
